nameOverride: null
fullnameOverride: null
daemonset:
  enabled: true
deployment:
  enabled: false
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage:
secret:
  labels: {}
  annotations: {}
configmap:
  enabled: false
initContainer: []
image:
  registry: docker.io
  repository: grafana/promtail
  tag: null
  pullPolicy: IfNotPresent
imagePullSecrets: []
annotations: {}
updateStrategy: {}
podLabels: {}
podAnnotations: {}
priorityClassName: null
livenessProbe: {}
readinessProbe:
  failureThreshold: 5
  httpGet:
    path: "{{ printf `%s/ready` .Values.httpPathPrefix }}"
    port: http-metrics
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
resources: {}
podSecurityContext:
  runAsUser: 0
  runAsGroup: 0
containerSecurityContext:
  readOnlyRootFilesystem: true
  capabilities:
    drop:
    - ALL
  allowPrivilegeEscalation: false
rbac:
  create: true
  pspEnabled: false
namespace: null
serviceAccount:
  create: true
  name: null
  imagePullSecrets: []
  annotations: {}
nodeSelector: {}
affinity: {}
tolerations:
- key: node-role.kubernetes.io/master
  operator: Exists
  effect: NoSchedule
- key: node-role.kubernetes.io/control-plane
  operator: Exists
  effect: NoSchedule
defaultVolumes:
- name: run
  hostPath:
    path: /run/promtail
- name: containers
  hostPath:
    path: /var/lib/docker/containers
- name: pods
  hostPath:
    path: /var/log/pods
defaultVolumeMounts:
- name: run
  mountPath: /run/promtail
- name: containers
  mountPath: /var/lib/docker/containers
  readOnly: true
- name: pods
  mountPath: /var/log/pods
  readOnly: true
extraVolumes: []
extraVolumeMounts: []
extraArgs: []
extraEnv: []
extraEnvFrom: []
enableServiceLinks: true
serviceMonitor:
  enabled: false
  namespace: null
  namespaceSelector: {}
  annotations: {}
  labels: {}
  interval: null
  scrapeTimeout: null
  relabelings: []
  metricRelabelings: []
  targetLabels: []
  scheme: http
  tlsConfig: null
  prometheusRule:
    enabled: false
    additionalLabels: {}
    rules: []
extraContainers: {}
extraPorts: {}
podSecurityPolicy:
  privileged: true
  allowPrivilegeEscalation: true
  volumes:
  - 'secret'
  - 'hostPath'
  - 'downwardAPI'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: true
  requiredDropCapabilities:
  - ALL
config:
  logLevel: info
  serverPort: 3101
  clients:
  - url: http://loki-loki-distributed-gateway.monitoring.svc.cluster.local/loki/api/v1/push
  enableTracing: false
  snippets:
    pipelineStages:
    - cri: {}
    common:
    - action: replace
      source_labels:
      - __meta_kubernetes_pod_node_name
      target_label: node_name
    - action: replace
      source_labels:
      - __meta_kubernetes_namespace
      target_label: namespace
    - action: replace
      replacement: $1
      separator: /
      source_labels:
      - namespace
      - app
      target_label: job
    - action: replace
      source_labels:
      - __meta_kubernetes_pod_name
      target_label: pod
    - action: replace
      source_labels:
      - __meta_kubernetes_pod_container_name
      target_label: container
    - action: replace
      replacement: /var/log/pods/*$1/*.log
      separator: /
      source_labels:
      - __meta_kubernetes_pod_uid
      - __meta_kubernetes_pod_container_name
      target_label: __path__
    - action: replace
      replacement: /var/log/pods/*$1/*.log
      regex: true/(.*)
      separator: /
      source_labels:
      - __meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash
      - __meta_kubernetes_pod_annotation_kubernetes_io_config_hash
      - __meta_kubernetes_pod_container_name
      target_label: __path__
    addScrapeJobLabel: false
    extraLimitsConfig: ""
    extraServerConfigs: ""
    extraScrapeConfigs: ""
    extraRelabelConfigs: []
    scrapeConfigs: |
      - job_name: kubernetes-pods
        pipeline_stages:
          {{- toYaml .Values.config.snippets.pipelineStages | nindent 4 }}
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_controller_name
            regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
            action: replace
            target_label: __tmp_controller_name
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              - __meta_kubernetes_pod_label_app
              - __tmp_controller_name
              - __meta_kubernetes_pod_name
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: app
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_instance
              - __meta_kubernetes_pod_label_release
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: instance
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_component
              - __meta_kubernetes_pod_label_component
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: component
          {{- if .Values.config.snippets.addScrapeJobLabel }}
          - replacement: kubernetes-pods
            target_label: scrape_job
          {{- end }}
          {{- toYaml .Values.config.snippets.common | nindent 4 }}
          {{- with .Values.config.snippets.extraRelabelConfigs }}
          {{- toYaml . | nindent 4 }}
          {{- end }}
  file: |
    server:
      log_level: {{ .Values.config.logLevel }}
      http_listen_port: {{ .Values.config.serverPort }}
      {{- with .Values.httpPathPrefix }}
      http_path_prefix: {{ . }}
      {{- end }}
      {{- tpl .Values.config.snippets.extraServerConfigs . | nindent 2 }}
    clients:
      {{- tpl (toYaml .Values.config.clients) . | nindent 2 }}
    positions:
      filename: /run/promtail/positions.yaml
    scrape_configs:
      {{- tpl .Values.config.snippets.scrapeConfigs . | nindent 2 }}
      {{- tpl .Values.config.snippets.extraScrapeConfigs . | nindent 2 }}
    limits_config:
      {{- tpl .Values.config.snippets.extraLimitsConfig . | nindent 2 }}
    tracing:
      enabled: {{ .Values.config.enableTracing }}
networkPolicy:
  enabled: false
  metrics:
    podSelector: {}
    namespaceSelector: {}
    cidrs: []
  k8sApi:
    port: 8443
    cidrs: []
httpPathPrefix: ""
sidecar:
  configReloader:
    enabled: false
    image:
      registry: docker.io
      repository: jimmidyson/configmap-reload
      tag: v0.8.0
      pullPolicy: IfNotPresent
    extraArgs: []
    extraEnv: []
    extraEnvFrom: []
    containerSecurityContext:
      readOnlyRootFilesystem: true
      capabilities:
        drop:
        - ALL
      allowPrivilegeEscalation: false
    readinessProbe: {}
    livenessProbe: {}
    resources: {}
    config:
      serverPort: 9533
    serviceMonitor:
      enabled: true
extraObjects: []
